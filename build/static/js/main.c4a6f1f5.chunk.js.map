{"version":3,"sources":["contexts/day-context.tsx","components/month/month.tsx","components/booking/booking.tsx","components/day/day.styled.tsx","components/day/day.tsx","assets/mr-bean.png","components/aside/aside.tsx","pages/calendar/calendar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DayContext","React","createContext","days","daysSm","Month","month","useState","id","date","dayOfWeek","availble","periodsForMeeting","start","end","daysInMonth","setDaysInMonth","useContext","context","setContext","isTabletOrMobile","useMediaQuery","query","useEffect","a","monthToCheck","m","y","length","fetch","method","headers","body","JSON","stringify","response","json","result","console","log","checkCalendar","handleClick","e","target","day","toString","visible","Number","position","clientX","clientY","daysToDisplay","forEach","fstDay","push","className","onClick","useMonthLogic","map","serverActions","inputValue","targetHour","eventToAdd","nameValue","purposeValue","addEvent","text","mailOptions","from","to","mailValue","subject","message","substring","sendMail","responseMail","mailForAdminOptions","alert","Booking","props","nameInputRef","useRef","mailInputRef","purposeInputRef","nameError","mailError","purposeError","inputError","setInputError","setInputValue","current","focus","handleCancel","useCallback","closeBooking","escFunction","event","stopPropagation","keyCode","document","addEventListener","removeEventListener","handleInput","value","handleConfirm","EmailValidator","validate","useBookingLogic","ref","type","onChange","placeholder","name","required","htmlFor","DayStyled","styled","div","top","left","Day","isDayVisible","setIsDayVisible","isbookingVisible","setIsBookingVisibile","setTargetHour","handleClose","dayPosition","useDayLogic","el","Aside","src","mrbean","alt","Months","Calendar","Date","today","firstMonth","setFirstMonth","secondMonth","setSecondMonth","getMonth","getFullYear","getDate","secondM","secondY","secondLength","nextM","nextY","nextLength","previousM","previousY","previousLength","useCalendarLogic","Provider","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.c4a6f1f5.chunk.js","sourcesContent":["import React from 'react';\n\nexport const DayContext = React.createContext<Partial<IDayContext>>({})","import React, { useContext, useEffect, useState } from 'react'\nimport { useMediaQuery } from 'react-responsive'\nimport { DayContext } from '../../contexts/day-context'\nimport './month.styles.scss'\n\nconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']\nconst daysSm =['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'];\nconst useMonthLogic = ({month}: IMonthProps) => {\n    const [daysInMonth, setDaysInMonth]= useState([{id: 0,\n                                                    date: 'string',\n                                                    dayOfWeek: 0,\n                                                    availble: true,\n                                                    periodsForMeeting:\n                                                         [{start: 'string',\n                                                          end: 'string',\n                                                          availble: true}]}])\n\n    const {context, setContext} = useContext(DayContext)                                                  \n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 968px)' })\n    \n    useEffect(()=>{\n        const checkCalendar = async () => {\n            let daysInMonth: IDaysInMonth[] = []\n            try{\n                let monthToCheck =\n                {\n                    \"m\": `${month.m<9?'0'+(month.m+1):month.m+1}`,\n                    \"y\": month.y,\n                    \"length\": month.length,\n                }\n                const response = await fetch ('/checkcalendar', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json;charset=utf-8' },\n                                body: JSON.stringify(monthToCheck)})\n                const result = await response.json()\n                daysInMonth = result\n            } catch (err) {\n                console.log(\"error when calling checkCalendar\", err)\n            }\n            setDaysInMonth(daysInMonth)\n        }\n       checkCalendar() \n    }, [month])\n    \n    const handleClick = (e: any) => {\n        if (setContext && context) {\n            if (e.target.id === context.day.id.toString() && context.visible === true) {\n                setContext({ day: daysInMonth[Number(e.target.id)-1],\n                    position: [e.clientX, e.clientY],\n                    visible: false});\n            } else {\n                setContext({ day: daysInMonth[Number(e.target.id)-1],\n                    position: [e.clientX, e.clientY],\n                    visible: true});\n            }\n        }   \n    }\n    \n    const daysToDisplay: React.ReactElement[] = []; // type???\n    \n    daysInMonth.forEach((day): void => {\n        if (day.id === 1) {\n            let fstDay\n            if (day.dayOfWeek-1>=0) {fstDay = day.dayOfWeek-1} else fstDay = 6\n            daysToDisplay.push(<div key={day.date} \n                                    id={day.id.toString()} \n                                    className={day.availble?`day ${days[fstDay]}`: `day ${days[fstDay]} busy`}\n                                    onClick={day.availble?handleClick:()=>{}}>\n                                    {day.id}\n                               </div>)\n        } else {\n            daysToDisplay.push(<div key={day.date} \n                                    id={day.id.toString()}\n                                    className={day.availble?'day':'day busy'}\n                                    onClick={day.availble?handleClick:()=>{}}>\n                                    {day.id}\n                               </div>\n                )    \n            }\n        }\n    )\n\n    return {\n        daysToDisplay,\n        isTabletOrMobile,\n        handleClick,\n    }\n}\n\n\nconst Month = (month: IMonthProps) => {\n    \n    const {daysToDisplay, isTabletOrMobile} = useMonthLogic(month)\n        \n    return(\n            isTabletOrMobile?\n            <div className=\"calendarMonth-sm\">\n            {daysSm.map((day) => <div key={day} className='legend-sm'>{day}</div>)}\n            {daysToDisplay.map(day => day)}\n            </div>\n            :\n            <div className=\"calendarMonth\">\n            {days.map((day) => <div key={day} className='legend'>{day}</div>)}\n            {daysToDisplay.map(day=>day)}\n            </div>\n    )\n}\n\nexport default Month","import React, { useRef, useState, useEffect, useCallback } from 'react';\nimport EmailValidator from 'email-validator';\nimport { useMediaQuery } from 'react-responsive'\nimport './booking.scss';\n\nconst useBookingLogic = (props: IBookingProps) => {\n    const nameInputRef = useRef<HTMLInputElement>(null)\n    const mailInputRef = useRef<HTMLInputElement>(null)\n    const purposeInputRef = useRef<HTMLTextAreaElement>(null)\n    \n    const [inputError, setInputError] = useState({\n                                                nameError: '',\n                                                mailError: '',\n                                                purposeError: '',\n                                                })\n\n    const [inputValue, setInputValue] = useState({\n                                                nameValue: '',\n                                                mailValue: '',\n                                                purposeValue: '',\n                                                })                                                \n    \n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 968px)' })\n\n    useEffect(()=>{\n        if (purposeInputRef && purposeInputRef.current) {\n            purposeInputRef.current.focus()}\n    }, [inputError.purposeError])\n\n    useEffect(()=>{\n        if (mailInputRef && mailInputRef.current) {\n            mailInputRef.current.focus()}\n    }, [inputError.mailError])\n\n    useEffect(()=>{\n        if (nameInputRef && nameInputRef.current) {\n            nameInputRef.current.focus()}\n    }, [inputError.nameError])\n    \n    const handleCancel = useCallback(()=> \n    {props.closeBooking()\n    }, [props])\n\n    const escFunction = useCallback((event) => {\n        event.stopPropagation()\n        if(event.keyCode === 27) {\n            handleCancel()\n        }\n      }, [handleCancel])\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction, true);\n        return () => {\n          document.removeEventListener(\"keydown\", escFunction, true);\n        };\n      }, [escFunction]);\n    \n    \n    const handleInput = (e:any) => {\n        switch (e.target.id) {\n            case 'nameInput':\n                setInputValue({...inputValue, nameValue: e.target.value});\n                setInputError({...inputError, nameError: ''})\n                break;\n            case 'mailInput':\n                setInputValue({...inputValue, mailValue: e.target.value});\n                setInputError({...inputError, mailError: ''})\n                break;\n            case 'purposeInput':\n                setInputValue({...inputValue, purposeValue: e.target.value});\n                setInputError({...inputError, purposeError: ''})\n                break;\n        }\n    }\n\n    const handleConfirm = async () => {\n        if (inputValue.nameValue.length<3) {\n            return setInputError({...inputError, nameError: 'please enter your name'})\n        }\n        \n        if (!EmailValidator.validate(inputValue.mailValue)) {\n            return setInputError({...inputError, mailError: 'please enter correct e-mail address'});\n        }\n        \n        if (inputValue.purposeValue.length<5) {\n            return setInputError({...inputError, purposeError: 'please write a subject of meeting'})\n        }\n        \n        let start = props.targetHour.substring(0,10)+\"T\"+props.targetHour.substring(10,15)+\":00\"\n        let end = start.substring(0,14) + '55' + start.substring(16)\n                \n        await serverActions({inputValue: inputValue, start: start, end: end, targetHour: props.targetHour})\n        handleCancel()\n    }\n        \n\n    // const useClickOutside = () => {\n    //     const onStartListeningClickOutside = ''\n    //     const waitingOnClickOutside = ''\n    //     const onClickOutside = ''\n        \n    //     return {\n    //         onStartListeningClickOutside,\n    //         waitingOnClickOutside,\n    //         onClickOutside\n    //     }\n    //   }\n\n    return {\n        nameInputRef,\n        mailInputRef,\n        purposeInputRef,\n        inputError,\n        inputValue,\n        handleInput,\n        handleConfirm,\n        handleCancel,\n        isTabletOrMobile\n    }\n}\n\nconst serverActions = async ({inputValue, start, end, targetHour}:IServerActionsProps) => {\n    const eventToAdd = {\n        'summary': `Meeting with ${inputValue.nameValue}`,\n        'description': inputValue.purposeValue,\n        'start': {\n            'dateTime': start,\n            'timeZone': 'Europe/Paris',\n        },\n        'end': {\n            'dateTime': end,\n            'timeZone': 'Europe/Paris',\n        },\n        'reminders': {\n            'useDefault': false,\n        },\n    };\n\n    const addEvent = await fetch ('/createevent', {\n        method: 'POST',\n        headers: {'Content-Type': 'application/json;charset=utf-8'},\n        body: JSON.stringify(eventToAdd)\n        })  \n    const responseAddEvent = await addEvent.text()\n    \n    if (responseAddEvent === \"OK\") {\n        const mailOptions = {\n            from: `Mr Bean Office<apifex@gmail.com>`,\n            to: inputValue.mailValue,\n            subject: `Meeting confirmation`,\n            message: `Hello, Your meeting with Mr. Bean is fixed to ${targetHour.substring(0,10)} at ${targetHour.substring(10,15)}`\n            };   \n        const sendMail = await fetch ('/sendmail', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(mailOptions)\n            })\n        const responseMail = await sendMail.text()\n\n        const mailForAdminOptions = {\n            from: `Mr Bean Office<apifex@gmail.com>`,\n            to: 'apifex@gmail.com',\n            subject: `Meeting with ${inputValue.nameValue}`,\n            message: `Hello, Mr. Bean, ${inputValue.nameValue} wish to meet with you. The meeting has been fixed to ${targetHour.substring(0,10)} at ${targetHour.substring(10,15)}. The purpose of the meeting: ${inputValue.purposeValue}. We've saved those informations in your calendar.`\n            };\n    \n        fetch ('/sendmail', {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json;charset=utf-8'},\n            body: JSON.stringify(mailForAdminOptions)\n            })\n        \n        if (responseMail === 'OK') alert ('Your meeting has been fixed, you will recive a confirmation mail.')\n    } else alert(\"We are so sorry, but somethink went wrong... Try again!\")\n}\n\nconst Booking = (props: IBookingProps) => {\n    \n    const {nameInputRef,\n        mailInputRef,\n        purposeInputRef,\n        inputError,\n        inputValue,\n        handleInput,\n        handleConfirm,\n        handleCancel,\n        isTabletOrMobile\n    } = useBookingLogic(props)\n   \n    return(\n        <div className='modal'>\n            <div className={isTabletOrMobile?'booking-wraper-sm':'booking-wraper'}>\n                You are going to book you visit on<br></br>\n                <b>{props.targetHour.substring(0,10)} at {props.targetHour.substring(10,15)}</b> <br></br>\n                Before you confirm, fill the form below:\n                <div className=\"input-group\">\n                    <input ref={nameInputRef} value={inputValue.nameValue} type=\"input\" onChange={handleInput} className=\"input\" placeholder=\"Name\" name=\"name\" id='nameInput' required />\n                    {(inputError.nameError!=='')?<span className=\"input-helper\">{inputError.nameError}</span>:null}\n                    <label htmlFor=\"name\" className=\"label\">Your Name</label>\n                </div>\n                <div className=\"input-group\">\n                    <input ref={mailInputRef} value={inputValue.mailValue} type=\"input\" onChange={handleInput} className=\"input\" placeholder=\"Email address\" name=\"mail\" id='mailInput' required />\n                    <label htmlFor=\"name\" className=\"label\">Your e-mail</label>\n                    {(inputError.mailError !== '')?<span className=\"input-helper\">{inputError.mailError}</span>:null}\n                </div>\n                The purpose of your visit:\n                <textarea className='booking-textArea' ref={purposeInputRef} value={inputValue.purposeValue} onChange={handleInput} id='purposeInput'/>\n                    {(inputError.purposeError!=='')?<div className=\"input-helper\">{inputError.purposeError}</div>:null}\n                <button className='booking-button' onClick={handleConfirm}>Confirm</button>\n                <button className='booking-button cancel' onClick={handleCancel}>Cancel</button>\n            </div>\n        </div>\n    )\n}\n\nexport default Booking;","import styled from 'styled-components'\n\nexport const DayStyled: React.FunctionComponent<IDayStyled> = styled.div<{top: number, left: number}>`\n    position: absolute;\n    top: ${props => props.top}px;\n    left: ${props => props.left}px;\n    background-color: #A8DADC;\n    width: 150px;\n    padding: 10px;\n    border-radius: 5px;\n    border-width: 1px;\n    border-style: solid; \n    border-color: #457B9D;\n    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n    `\n","import React, {useContext, useEffect, useState, useCallback} from 'react';\nimport Booking from '../booking/booking'\nimport {DayStyled} from './day.styled'\nimport {DayContext} from '../../contexts/day-context'\nimport { useMediaQuery } from 'react-responsive'\n\nimport './day.scss'\n\nconst useDayLogic = () => {\n    const {context} = useContext(DayContext)\n    const [isDayVisible, setIsDayVisible] = useState(false)\n    const [isbookingVisible, setIsBookingVisibile] = useState(false)\n    const [targetHour, setTargetHour] = useState('')\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 968px)' })\n\n    useEffect(()=>{\n      if (context) setIsDayVisible(context.visible)\n    },[context])\n\n    const handleClose = useCallback(() => \n    {setIsDayVisible(false)},[setIsDayVisible])\n    \n    const escFunction = useCallback((event) => {\n        event.stopPropagation()\n        if(event.keyCode === 27) {\n          handleClose()\n        }\n      }, [handleClose]);\n\n    useEffect(() => {\n        document.addEventListener(\"keydown\", escFunction, false);\n        return () => {\n          document.removeEventListener(\"keydown\", escFunction, false);\n        };\n      }, [escFunction]);\n    \n    const handleClick = (e:any) => {\n        setIsBookingVisibile(!isbookingVisible);\n        setTargetHour(e.target.id) \n    }\n\n    const closeBooking = () => {\n        setIsBookingVisibile(false)\n    }\n    \n    let dayPosition = context?context.position:[0,0]\n    \n    if (isTabletOrMobile) {\n      dayPosition[0] = dayPosition[0]>220?dayPosition[0]-200:dayPosition[0]\n      dayPosition[1] = dayPosition[1]>200?dayPosition[1]-200:dayPosition[1]\n    } else {\n      dayPosition[0] = dayPosition[0]>900?dayPosition[0]-200:dayPosition[0]\n      dayPosition[1] = dayPosition[1]>300?dayPosition[1]-300:dayPosition[1]\n    }\n\n    return {\n      context,\n      isbookingVisible,\n      isDayVisible,\n      dayPosition,\n      handleClose,\n      handleClick,\n      closeBooking,\n      targetHour,\n    }\n   \n}\n\nconst Day = () => {\n    \n  const {context,\n         isbookingVisible,\n         isDayVisible,\n         dayPosition,\n         handleClose,\n         handleClick,\n         closeBooking,\n         targetHour} = useDayLogic()\n    \n   return (\n        context?isDayVisible?(\n        <DayStyled top={dayPosition[1]} left={dayPosition[0]}>\n          <div>\n            <div className='close' onClick={handleClose}>x</div>\n            <div className='day-header'>{context.day.date}</div>\n            <div>\n              {context.day.periodsForMeeting.map((el: IPeriodsForMeetings) => <div\n                  key={el.start}\n                  id={context.day.date + el.start}\n                  onClick={el.availble?handleClick:()=>{}}\n                  className={el.availble?'availble':'busyday'}>\n                  {el.start} - {el.end}</div>)\n              }    \n            </div>\n            <div>\n              {isbookingVisible?\n                <Booking targetHour={targetHour} closeBooking={closeBooking}/>:null\n              }\n            </div>\n          </div>\n        </DayStyled>): null:null\n    )\n}\n\nexport default Day","export default __webpack_public_path__ + \"static/media/mr-bean.cfc04ab0.png\";","import React from 'react';\nimport {useMediaQuery} from 'react-responsive'\nimport mrbean from '../../assets/mr-bean.png';\n\nimport './aside.scss'\n\nconst Aside = () => {\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 968px)' })    \n    return(\n        isTabletOrMobile?\n        <div className=\"grid-aside\">\n            <img src={mrbean} alt=\"mrbean\" className='mrbean-sm'/>\n            <h3 className=\"welcome-sm\">Welcome in Mr.Been's office</h3>\n            <p>Do you want to meet with me?</p>\n            <p>Just click on the calendar!</p>\n        </div>\n        :\n        <div className=\"grid-aside\">\n            <h3 className=\"welcome\">Welcome in Mr.Been's office</h3>\n            <p>Do you want to meet with me?</p>\n            <p>Just click on the calendar!</p>\n            <img src={mrbean} alt=\"mrbean\" className='mrbean'/>\n        </div>\n    )\n}\n\nexport default Aside;","import React, {useState, useEffect} from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { DayContext } from '../../contexts/day-context';\nimport Month from '../../components/month/month';\nimport Day from '../../components/day/day';\nimport Aside from '../../components/aside/aside';\nimport './calendar.scss'\n\nconst Months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'Septembre', 'October', 'November', 'December']\n\nconst useCalendarLogic = () => {\n    const [today] = useState(new Date());\n    const [firstMonth, setFirstMonth] = useState({m: 0, y: 2020, length: 30})\n    const [secondMonth, setSecondMonth] = useState({m: 0, y: 2020, length: 30})\n    \n    useEffect(()=>{\n        setFirstMonth({m: today.getMonth(), y: today.getFullYear(), length: new Date(today.getFullYear(), today.getMonth()+1, 0).getDate()})\n        let secondM = (today.getMonth()+1<12)?today.getMonth()+1:0\n        let secondY = (today.getMonth()+1<12)?today.getFullYear():today.getFullYear()+1\n        let secondLength = new Date((today.getMonth()+1<12)?today.getFullYear():today.getFullYear()+1, ((today.getMonth()+1<12)?today.getMonth()+1:0)+1, 0).getDate()\n        setSecondMonth({m: secondM, y: secondY, length: secondLength})\n    }, [today])\n\n    const handleClick = (e:any) => { // type??\n        let nextM = (secondMonth.m+1<12)?secondMonth.m+1:0\n        let nextY = (nextM===0)?secondMonth.y+1:secondMonth.y\n        let nextLength = new Date((nextM===0)?secondMonth.y+1:secondMonth.y, ((secondMonth.m+1<12)?secondMonth.m+1:0)+1, 0).getDate()\n\n        let previousM = (firstMonth.m-1>=0)?firstMonth.m-1:11\n        let previousY = (previousM===11)?firstMonth.y-1:firstMonth.y\n        let previousLength = new Date(previousY, previousM+1, 0).getDate()\n\n        if (e.target.id==='previous') {\n            setSecondMonth({m: firstMonth.m, y: firstMonth.y, length: firstMonth.length})\n            setFirstMonth({m: previousM, y: previousY, length: previousLength })\n        }\n\n        if (e.target.id==='next') {\n            setFirstMonth({m: secondMonth.m, y: secondMonth.y, length: secondMonth.length})\n            setSecondMonth({m: nextM, y: nextY, length: nextLength})\n        }\n    }\n\n    const [context, setContext] = useState(\n        {   day:{id: 0,\n            date: 'string',\n            dayOfWeek: 0,\n            availble: true,\n            periodsForMeeting:\n                [{start: 'string',\n                end: 'string',\n                availble: true}]\n                },\n            position: [0,0], \n            visible: false\n        }\n    )\n    \n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 968px)' })\n\n    return {\n        firstMonth,\n        secondMonth,\n        handleClick,\n        context,\n        setContext,\n        isTabletOrMobile,\n    }\n}\n\nconst Calendar = () => {\n    const {firstMonth,\n           secondMonth, \n           handleClick, \n           context, \n           setContext,\n           isTabletOrMobile, } = useCalendarLogic()\n    \n    return(\n        isTabletOrMobile?\n        <div className=\"calendar-sm\">\n        <Aside/>\n        <DayContext.Provider value={{context: context, setContext: setContext}}>\n            <Day />      \n            <div>\n            <h3><span onClick={handleClick} id='previous' className='previous'>Previous</span>\n                    {Months[firstMonth.m]}  {firstMonth.y}\n                <span onClick={handleClick} className='next' id='next'>Next</span>\n            </h3>\n                <Month month={firstMonth} />\n            </div>\n        </DayContext.Provider>\n        </div>\n        :\n        <div className=\"calendar\">\n        <Aside/>\n        <DayContext.Provider value={{context: context, setContext: setContext}}>\n            <Day />\n            <div>\n                <h3><span onClick={handleClick} id='previous' className='previous'>Previous</span> {Months[firstMonth.m]} {firstMonth.y}</h3>\n                <Month month={firstMonth}/>\n            </div>\n            <div>\n                <h3>{Months[secondMonth.m]} {secondMonth.y} <span onClick={handleClick} className='next' id='next'>Next</span></h3>\n                <Month month={secondMonth}/>\n            </div>\n        </DayContext.Provider>\n        </div>\n    )\n}\n\nexport default Calendar","import React from 'react';\nimport './App.scss';\nimport Calendar from './pages/calendar/calendar'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Calendar />\n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}